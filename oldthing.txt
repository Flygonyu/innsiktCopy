// function highlightLocation(id) {
//   console.log("id", id)
//   if (model.newExperience.location === "") {

//   }
//   if (model.newExperience.location != "") {
//     let value = model.newExperience.location
//     console.log("value", value)
//      model.location.find()
//   }
// }

//     console.log("kj√∏rer", trigger)
//     let triggers = model.newExperience.triggers;
//     if(triggers.length != 0) checkTrigger(trigger);
//     if(triggers.length === 0) addTrigger(trigger);
//     viewSelector();
// };
// function checkTrigger(trigger) {
//     let triggers = model.newExperience.triggers;
//     for (let j = 0; j < triggers.length; j++) {
//         let foundIndex = triggers.findIndex(x => x === trigger);
//         if (foundIndex == null) {
//             addTrigger(trigger);
//             return;
//         }
// else {
//     removeTrigger(trigger, foundIndex);
//     return;
// }
// };
// }
// function addTrigger(trigger) {
//     let triggers = model.newExperience.triggers;
//     triggers.push(trigger);
//     return;
// }
// function removeTrigger(trigger, foundIndex) {
//     let triggers = model.newExperience.triggers;
//     // let foundIndex = feels.findIndex(x => x.name === feel);
// 	if (trigger.length <= 1) {
// 		model.newExperience.triggers = [];
// 		return;
// 	}
// 	else {
// 		trigger.splice(foundIndex, 1);
//     return;
// 	}
// }

//   console.log(element, id);
//   if (!element[id].class) {
//     element[id].class = "chosen";
//     console.log(element[id]);
//   } else {
//     delete element[id].class;
//   }
// }

// This script is released to the public domain and may be used, modified and
// distributed without restrictions. Attribution not necessary but appreciated.
// Source: https://weeknumber.com/how-to/javascript

// Returns the ISO week of the date.
// Date.prototype.getWeek = function () {
//   var date = new Date(this.getTime());
//   date.setHours(0, 0, 0, 0);
// Thursday in current week decides the year.
// date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);
// January 4 is always in week 1.
// var week1 = new Date(date.getFullYear(), 0, 4);
// Adjust to Thursday in week 1 and count number of weeks from date to week1.
//   return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000
//                         - 3 + (week1.getDay() + 6) % 7) / 7);
// }

// Returns the four-digit year corresponding to the ISO week of the date.
// Date.prototype.getWeekYear = function() {
//   var date = new Date(this.getTime());
//   date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);
//   return date.getFullYear();
// }

// let ukenummer = model.newExperience.time.getWeek()
// console.log(ukenummer)